#  Copyright 2021 Collate
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#  http://www.apache.org/licenses/LICENSE-2.0
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

name: Python Checkstyle

# read-write repo token
# access to secrets
on:
  pull_request_target:
    branches:
      - main
      - '0.[0-9]+.[0-9]+'

concurrency: 
  group: py-checkstyle-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  py-checkstyle:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Ubuntu related dependencies
        run: |
          sudo apt-get install -y libsasl2-dev unixodbc-dev python3-venv

      - name: Install Python & Openmetadata related dependencies
        run: |
          python3 -m venv env
          source env/bin/activate
          sudo make install_antlr_cli
          make install install_test install_dev

      # Add back linting once we have 10/10 on main
      - name: Code style check
        id: style
        continue-on-error: true
        run: |
          source env/bin/activate
          make generate
          make py_format_check

      - name: Create a comment in the PR with the instructions
        if: steps.style.outcome != 'success'
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            **The Python checkstyle failed.**

            Please run `make py_format` in the root of your repository and commit the changes to this PR.
            You can also use [pre-commit](https://pre-commit.com/) to automate the Python code formatting.

            You can install the pre-commit hooks with `make install_test precommit_install`.

      - name: Python checkstyle failed, check the comment in the PR
        if: steps.style.outcome != 'success'
        run: |
          exit 1
